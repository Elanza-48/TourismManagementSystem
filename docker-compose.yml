version: "3.9"

# requires docker-compose v1.28.0+

# --- core only---
# docker-compose up

# --- core + monitor ---
# docker-compose --profile monitor up

# docker-compose down --remove-orphans

services:
  postgres:
    image: tms-postgres-img
    container_name: tms-postgres
    restart: unless-stopped
    build:
      context: .
      dockerfile: db.Dockerfile
    networks:
      - tms-bridge
    ports:
      - "5532:5432"
    volumes:
      - tms-pgdata:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      - POSTGRES_DB=tms-db-dev
      - POSTGRES_USER=elanza48
      - POSTGRES_PASSWORD=elanza48
      - PGDATA=/var/lib/postgresql/data/pgdata

  pgadmin:
    image: dpage/pgadmin4:6.8
    container_name: tms-pgadmin4
    restart: unless-stopped
    networks:
      - tms-bridge
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: elanza48@postgres.com
      PGADMIN_DEFAULT_PASSWORD: elanza48

  app:
    image: adoptopenjdk/openjdk11-openj9:alpine-jre
    container_name: tms-app
    restart: unless-stopped
    working_dir: /opt/app
    networks:
      - tms-bridge
    ports:
      - "8090:8090"
      - "8091:8091"
    volumes:
      - ./build/libs:/opt/app
    env_file:
      - .env
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/tms-db-dev
      - SPRING_DATASOURCE_USERNAME=elanza48
      - SPRING_DATASOURCE_PASSWORD=elanza48
    depends_on:
      - postgres
    command: ["java", "-jar", "/opt/app/tms-$APP_VERSION.jar"]

  nginx:
    image: nginx:1.21.6-alpine
    container_name: tms-nginx
    restart: unless-stopped
    networks:
      - tms-bridge
    ports:
      - "8080:8080"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - app

  nginx-pxp:
    image: nginx/nginx-prometheus-exporter:0.10.0
    container_name: tms-nginx-pxp
    profiles: ["monitor"]
    restart: unless-stopped
    networks:
      - tms-bridge
    ports:
      - "9113:9113"
    command:
      - '-nginx.scrape-uri=http://nginx:8080/stub_status'
    depends_on:
      - nginx

  prometheus:
    image: prom/prometheus:v2.34.0
    container_name: tms-prometheus
    profiles: ["monitor"]
    restart: unless-stopped
    networks:
      - tms-bridge
    ports:
      - "9090:9090"
    volumes:
      - ./metrics/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - nginx

  pg-exporter:
    image: prometheuscommunity/postgres-exporter:v0.10.1
    container_name: tms-pg-exporter
    profiles: ["monitor"]
    restart: unless-stopped
    networks:
      - tms-bridge
    ports:
      - "9187:9187"
    environment:
      - DATA_SOURCE_NAME=postgresql://elanza48:elanza48@postgres:5432/postgres?sslmode=disable
    depends_on:
    - prometheus

  grafana:
    image: grafana/grafana:8.4.6
    container_name: tms-grafana
    profiles: ["monitor"]
    restart: unless-stopped
    networks:
      - tms-bridge
    ports:
      - "3000:3000"
    volumes:
      - tms-grafana:/var/lib/grafana
      - ./metrics/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources/
      - ./metrics/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards/
    environment:
      - GF_INSTALL_PLUGINS=yesoreyeram-boomtable-panel,agenty-flowcharting-panel
      - GF_SECURITY_ADMIN_USER=elanza48
      - GF_SECURITY_ADMIN_PASSWORD=elanza48
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_USERS_DEFAULT_THEME=light
      - GF_LOG_CONSOLE_LEVEL=info
    depends_on:
      - prometheus


networks:
  tms-bridge:
    driver: bridge

volumes:
  tms-pgdata:
  tms-grafana:
