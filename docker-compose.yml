version: "3.9"

# docker-compose down  -v --rmi all
# UID=$(id -u) GID=$(id -g) docker-compose --env-file ./.env up --build

networks:
  tms-tier:
    driver: bridge

services:
  nginx:
    image: nginx:${NGINX_VERSION:-latest}
    container_name: tms-nginx
    restart: always
    networks:
      - tms-tier
    ports:
      - 7800:7800
      - 7801:7801
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - app

  # Spring-boot app
  app:
    image: adoptopenjdk/openjdk11-openj9:${OPENJDK_VERSION:-latest}
    container_name: tms-app
    working_dir: /opt/app
    networks:
      - tms-tier
    expose:
      - "7800"
      - "7801"
    volumes:
      - ./build/libs:/opt/app
    env_file:
      - .env
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgresql:5432/${POSTGRES_DATABASE:-tms-db}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USERNAME:-elanza48}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD:-elanza48}
    depends_on:
      postgresql:
        condition: service_healthy
    command: ["java", "-jar", "/opt/app/TourismManagementSystem-${APP_VERSION}.jar"]

  # postgreSQL
  postgresql:
    image: tms-postgresql
    container_name: tms-postgresql
    restart: unless-stopped
#    user: "${UID}:${GID}"
    build:
      context: .
      dockerfile: db.Dockerfile
    networks:
      - tms-tier
    ports:
      - 5532:5432
    volumes:
       - ./postgres-data:/var/lib/postgresql/data
    env_file:
      - .env
    healthcheck:
          test: ["CMD-SHELL", "pg_isready", "-d", "tms-db", "-U", "elanza48"]
          interval: 10s
          timeout: 5s
          retries: 5