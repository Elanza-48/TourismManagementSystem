
group = 'com.elanza48'
version = '0.5.5-SNAPSHOT'
description = 'TourismManagementSystem'
java.sourceCompatibility = JavaVersion.VERSION_11

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

ext{
    log4j2.version '2.17.0'

    mapstruct.version '1.4.2.Final'
    projectlombok.version '1.18.22'
    bouncycastle.version '1.69'
}

plugins {
    id 'java'
    id 'maven-publish'
    id 'org.springframework.boot' version '2.6.1'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

dependencies {
    implementation 'org.springframework:spring-context-support'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'javax.cache:cache-api'
    implementation 'org.ehcache:ehcache'
    implementation 'org.hibernate:hibernate-jcache'
    implementation 'org.hibernate.validator:hibernate-validator'
    implementation 'org.postgresql:postgresql'
    implementation 'com.auth0:java-jwt:3.18.2'

    implementation "org.bouncycastle:bcprov-jdk15on:${bouncycastle.version}"
    implementation "org.bouncycastle:bcpkix-jdk15on:${bouncycastle.version}"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

dependencies {
    implementation "org.projectlombok:lombok:${projectlombok.version}"
    implementation "org.mapstruct:mapstruct:${mapstruct.version}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstruct.version}"
}

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.compilerArgs =[
            '-Amapstruct.defaultComponentModel=spring',
            '-Amapstruct.verbose=true'
    ]
}

test{
    useJUnitPlatform()
}
