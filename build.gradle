
plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.4'
    id 'io.spring.dependency-management' version '1.0.14.RELEASE'
}


group = 'com.elanza48'
description = 'TourismManagementSystem'
java.sourceCompatibility = JavaVersion.VERSION_17
jar.enabled=false

bootJar{
    archivesBaseName="tms"
}

springBoot{
    buildInfo()
}

repositories {
    mavenLocal()
    mavenCentral()
}

ext{
    mapstruct_version='1.5.2.Final'
    mapstruct_binding_version='0.2.0'
    bouncycastle_version='1.71.1'
    auth0_jwt_version='3.19.2'
    mm_jvm_xtra_version='0.2.2'
}

dependencies {
    implementation 'org.springframework:spring-context-support'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    runtimeOnly 'org.postgresql:postgresql'
    implementation 'org.hibernate.validator:hibernate-validator'
    implementation 'org.hibernate:hibernate-jcache'
    implementation 'javax.cache:cache-api'
    implementation 'org.ehcache:ehcache'
    implementation 'io.micrometer:micrometer-registry-prometheus'
    implementation "io.github.mweirauch:micrometer-jvm-extras:${mm_jvm_xtra_version}"


    implementation "com.auth0:java-jwt:${auth0_jwt_version}"
    implementation "org.bouncycastle:bcprov-jdk18on:${bouncycastle_version}"
    implementation "org.bouncycastle:bcpkix-jdk18on:${bouncycastle_version}"
    implementation "org.bouncycastle:bcutil-jdk18on:${bouncycastle_version}"

    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.springframework.security:spring-security-test"
}

dependencies {
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    compileOnly "org.projectlombok:lombok"
    implementation "org.mapstruct:mapstruct:${mapstruct_version}"

    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstruct_version}"
    annotationProcessor "org.projectlombok:lombok"
    annotationProcessor "org.projectlombok:lombok-mapstruct-binding:${mapstruct_binding_version}"
}

configurations {
    developmentOnly
    runtimeClasspath {
		extendsFrom developmentOnly
	}
    compileOnly {
        extendsFrom annotationProcessor
    }
    all{
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.compilerArgs =[
            '-Amapstruct.defaultComponentModel=spring'
    ]
}

test{
    useJUnitPlatform()
}
